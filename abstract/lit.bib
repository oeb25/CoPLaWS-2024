
@InProceedings{   DBLP:conf/cade/Moura021,
  author        = {Leonardo de Moura and Sebastian Ullrich},
  editor        = {Andr{\'{e}} Platzer and Geoff Sutcliffe},
  title         = {The Lean 4 Theorem Prover and Programming Language},
  booktitle     = {Automated Deduction - {CADE} 28 - 28th International
                  Conference on Automated Deduction, Virtual Event, July
                  12-15, 2021, Proceedings},
  series        = {Lecture Notes in Computer Science},
  volume        = {12699},
  pages         = {625--635},
  publisher     = {Springer},
  year          = {2021},
  url           = {https://doi.org/10.1007/978-3-030-79876-5\_37},
  doi           = {10.1007/978-3-030-79876-5\_37},
  timestamp     = {Thu, 29 Sep 2022 08:36:56 +0200},
  biburl        = {https://dblp.org/rec/conf/cade/Moura021.bib},
  bibsource     = {dblp computer science bibliography, https://dblp.org}
}

@PhDThesis{       DBLP:phd/dnb/Kaminski19,
  author        = {Benjamin Lucien Kaminski},
  title         = {Advanced weakest precondition calculi for probabilistic
                  programs},
  school        = {{RWTH} Aachen University, Germany},
  year          = {2019},
  url           = {http://publications.rwth-aachen.de/record/755408},
  urn           = {urn:nbn:de:101:1-2019072507004473397003},
  timestamp     = {Sat, 17 Jul 2021 09:07:32 +0200},
  biburl        = {https://dblp.org/rec/phd/dnb/Kaminski19.bib},
  bibsource     = {dblp computer science bibliography, https://dblp.org}
}

@Article{         GRETZ2014110,
  title         = {Operational versus weakest pre-expectation semantics for
                  the probabilistic guarded command language},
  journal       = {Performance Evaluation},
  volume        = {73},
  pages         = {110-132},
  year          = {2014},
  note          = {Special Issue on the 9th International Conference on
                  Quantitative Evaluation of Systems},
  issn          = {0166-5316},
  doi           = {https://doi.org/10.1016/j.peva.2013.11.004},
  url           = {https://www.sciencedirect.com/science/article/pii/S0166531613001429},
  author        = {Friedrich Gretz and Joost-Pieter Katoen and Annabelle
                  McIver},
  keywords      = {Expectation transformer semantics, Operational semantics,
                  Markov decision process, Expected rewards},
  abstract      = {This paper proposes a simple operational semantics of
                  pGCL, Dijkstra’s guarded command language extended with
                  probabilistic choice, and relates this to pGCL’s
                  wp-semantics by McIver and Morgan. Parametric Markov
                  decision processes whose state rewards depend on the
                  post-expectation at hand are used as the operational model.
                  We show that the weakest pre-expectation of a pGCL-program
                  w.r.t. a post-expectation corresponds to the expected
                  cumulative reward to reach a terminal state in the
                  parametric MDP associated to the program. In a similar way,
                  we show a correspondence between weakest liberal
                  pre-expectations and liberal expected cumulative rewards.
                  The verification of probabilistic programs using
                  wp-semantics and operational semantics is illustrated using
                  a simple running example.}
}

@InProceedings{   Mathlib,
  author        = {The mathlib Community},
  title         = {The lean mathematical library},
  year          = {2020},
  isbn          = {9781450370974},
  publisher     = {Association for Computing Machinery},
  address       = {New York, NY, USA},
  url           = {https://doi.org/10.1145/3372885.3373824},
  doi           = {10.1145/3372885.3373824},
  abstract      = {This paper describes mathlib, a community-driven effort to
                  build a unified library of mathematics formalized in the
                  Lean proof assistant. Among proof assistant libraries, it
                  is distinguished by its dependently typed foundations,
                  focus on classical mathematics, extensive hierarchy of
                  structures, use of large- and small-scale automation, and
                  distributed organization. We explain the architecture and
                  design decisions of the library and the social organization
                  that has led to its development.},
  booktitle     = {Proceedings of the 9th ACM SIGPLAN International
                  Conference on Certified Programs and Proofs},
  pages         = {367–381},
  numpages      = {15},
  keywords      = {Lean, formal library, formal proof, mathlib},
  location      = {New Orleans, LA, USA},
  series        = {CPP 2020}
}

@Book{            PrinciplesOfModelChecking,
  author        = {Baier, Christel and Katoen, Joost-Pieter},
  title         = {Principles of Model Checking (Representation and Mind
                  Series)},
  year          = {2008},
  isbn          = {026202649X},
  publisher     = {The MIT Press},
  abstract      = {Our growing dependence on increasingly complex computer
                  and software systems necessitates the development of
                  formalisms, techniques, and tools for assessing functional
                  properties of these systems. One such technique that has
                  emerged in the last twenty years is model checking, which
                  systematically (and automatically) checks whether a model
                  of a given system satisfies a desired property such as
                  deadlock freedom, invariants, or request-response
                  properties. This automated technique for verification and
                  debugging has developed into a mature and widely used
                  approach with many applications. Principles of Model
                  Checking offers a comprehensive introduction to model
                  checking that is not only a text suitable for classroom use
                  but also a valuable reference for researchers and
                  practitioners in the field. The book begins with the basic
                  principles for modeling concurrent and communicating
                  systems, introduces different classes of properties
                  (including safety and liveness), presents the notion of
                  fairness, and provides automata-based algorithms for these
                  properties. It introduces the temporal logics LTL and CTL,
                  compares them, and covers algorithms for verifying these
                  logics, discussing real-time systems as well as systems
                  subject to random phenomena. Separate chapters treat such
                  efficiency-improving techniques as abstraction and symbolic
                  manipulation. The book includes an extensive set of
                  examples (most of which run through several chapters) and a
                  complete set of basic results accompanied by detailed
                  proofs. Each chapter concludes with a summary,
                  bibliographic notes, and an extensive list of exercises of
                  both practical and theoretical nature.}
}

@Book{            Puterman1994,
  title         = {Markov Decision Processes: Discrete Stochastic Dynamic
                  Programming},
  isbn          = {9780470316887},
  issn          = {1940-6347},
  url           = {http://dx.doi.org/10.1002/9780470316887},
  doi           = {10.1002/9780470316887},
  journal       = {Wiley Series in Probability and Statistics},
  publisher     = {Wiley},
  author        = {Puterman, Martin L.},
  year          = {1994},
  month         = apr
}
